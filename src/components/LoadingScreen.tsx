import React from "react";

interface LoadingProps {
    isFull?: boolean;
    text?: string;
}

const LoadingScreen: React.FC<LoadingProps>  = ({isFull = false, text}) => {
    return (
        <div className={`flex items-center justify-center ${isFull ? "h-screen" : ""}`}>
            <div className="text-center">
                <svg viewBox="0 0 800 800" className={`${isFull ? "w-52 h-52" : "w-24 h-24"}`} fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M267.869 90.6085C284.564 83.3141 296.231 66.655 296.231 47.2709C296.231 21.1639 275.067 0 248.96 0C222.853 0 201.689 21.1639 201.689 47.2709C201.689 66.655 213.357 83.3141 230.052 90.6085V160.721H195.386C176.241 160.721 160.721 176.241 160.721 195.386V230.052H91.8521C85.3627 211.692 67.8531 198.538 47.2709 198.538C21.1638 198.538 0 219.702 0 245.809C0 271.916 21.1638 293.08 47.2709 293.08C65.4107 293.08 81.164 282.862 89.0896 267.869H160.721V375.016H90.6086C83.3142 358.321 66.6551 346.653 47.2709 346.653C21.1638 346.653 0 367.817 0 393.924C0 420.031 21.1638 441.195 47.2709 441.195C66.6551 441.195 83.3142 429.528 90.6086 412.833H160.721V519.98H90.6086C83.3142 503.285 66.6551 491.618 47.2709 491.618C21.1638 491.618 0 512.781 0 538.888C0 564.995 21.1638 586.159 47.2709 586.159C66.6551 586.159 83.3142 574.492 90.6086 557.797H160.721V589.311C160.721 608.456 176.241 623.976 195.386 623.976H233.203V700.392C216.508 707.686 204.841 724.345 204.841 743.729C204.841 769.836 226.004 791 252.112 791C278.219 791 299.382 769.836 299.382 743.729C299.382 724.345 287.715 707.686 271.02 700.392V623.976H378.167V700.392C361.472 707.686 349.805 724.345 349.805 743.729C349.805 769.836 370.969 791 397.076 791C423.183 791 444.347 769.836 444.347 743.729C444.347 724.345 432.679 707.686 415.984 700.392V623.976H523.131V700.392C506.436 707.686 494.769 724.345 494.769 743.729C494.769 769.836 515.933 791 542.04 791C568.147 791 589.311 769.836 589.311 743.729C589.311 724.345 577.643 707.686 560.948 700.392V623.976H589.311C608.456 623.976 623.976 608.456 623.976 589.311V554.645H700.392C707.686 571.341 724.345 583.008 743.729 583.008C769.836 583.008 791 561.844 791 535.737C791 509.63 769.836 488.466 743.729 488.466C724.345 488.466 707.686 500.133 700.392 516.829H623.976V409.681H700.392C707.686 426.376 724.345 438.044 743.729 438.044C769.836 438.044 791 416.88 791 390.773C791 364.666 769.836 343.502 743.729 343.502C724.345 343.502 707.686 355.169 700.392 371.865H623.976V264.717H700.392C707.686 281.412 724.345 293.08 743.729 293.08C769.836 293.08 791 271.916 791 245.809C791 219.702 769.836 198.538 743.729 198.538C724.345 198.538 707.686 210.205 700.392 226.9H623.976V195.386C623.976 176.241 608.456 160.721 589.311 160.721H557.797V90.6085C574.492 83.3141 586.159 66.655 586.159 47.2709C586.159 21.1639 564.996 0 538.888 0C512.781 0 491.618 21.1639 491.618 47.2709C491.618 66.655 503.285 83.3141 519.98 90.6085V160.721H412.833V90.6085C429.528 83.3141 441.195 66.655 441.195 47.2709C441.195 21.1639 420.031 0 393.924 0C367.817 0 346.653 21.1639 346.653 47.2709C346.653 66.655 358.321 83.3141 375.016 90.6085V160.721H267.869V90.6085ZM252.112 242.657H538.888C540.629 242.657 542.04 244.068 542.04 245.809V371.441C529.071 362.537 512.44 351.905 493.797 341.851C471.846 330.012 446.664 318.732 421.09 312.147C395.638 305.594 368.546 303.369 343.56 311.12C310.557 321.358 279.386 349.764 257.595 373.375C254.573 376.65 251.689 379.879 248.96 383.017V245.809C248.96 244.068 250.371 242.657 252.112 242.657ZM530.506 401.814C535.026 405.014 538.908 407.868 542.04 410.222V532.586C542.04 534.326 540.629 535.737 538.888 535.737H252.112C250.371 535.737 248.96 534.326 248.96 532.586V433.594C250.549 431.393 252.792 428.345 255.601 424.681C261.687 416.745 270.369 406 280.753 394.749C292.95 381.533 306.773 368.427 320.938 358.204C318.243 363.223 316.1 368.582 314.586 374.199C319.993 368.859 327.423 365.562 335.624 365.562C352.158 365.562 365.562 378.966 365.562 395.5C365.562 412.034 352.158 425.438 335.624 425.438C328.075 425.438 321.178 422.644 315.912 418.034C325.977 447.984 354.28 469.558 387.622 469.558C429.393 469.558 463.255 435.695 463.255 393.924C463.255 380.588 459.804 368.059 453.745 357.18C462.324 361.019 470.739 365.22 478.837 369.588C499.423 380.69 517.527 392.628 530.506 401.814ZM217.446 245.809C217.446 226.664 232.966 211.143 252.112 211.143H538.888C558.034 211.143 573.554 226.664 573.554 245.809V532.586C573.554 551.731 558.034 567.251 538.888 567.251H252.112C232.966 567.251 217.446 551.731 217.446 532.586V245.809Z" fill="url(#paint0_linear_64_5)" />
                    <defs>
                        <linearGradient id="paint0_linear_64_5" x1="996.5" y1="-234.5" x2="-97" y2="909" gradientUnits="userSpaceOnUse">
                            <stop offset="0%" stopColor="#85FFFF">
                                <animate attributeName="stopColor" values="#85FFFF;#FF85FF;#85FFFF" dur="4s" repeatCount="indefinite" />
                            </stop>
                            <stop offset="100%" stopColor="#000946">
                                <animate attributeName="stopColor" values="#000946;#460000;#000946" dur="4s" repeatCount="indefinite" />
                            </stop>
                        </linearGradient>
                    </defs>
                </svg>
                {text ? <p className="mt-4">{text}</p> : ""}
            </div>
        </div>
    );
};

export default LoadingScreen;
